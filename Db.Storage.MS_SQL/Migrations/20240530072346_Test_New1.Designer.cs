// <auto-generated />
using System;
using Db.Storage.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Db.Storage.MS_SQL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240530072346_Test_New1")]
    partial class Test_New1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Db.Storage.Models.Center", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("Name");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("Db.Storage.Models.CenterTutor", b =>
                {
                    b.Property<Guid>("IsnCenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IsnTutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CenterIsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IsnCenter", "IsnTutor");

                    b.HasIndex("CenterIsnNode");

                    b.HasIndex("IsnTutor");

                    b.HasIndex("IsnCenter", "IsnTutor");

                    b.ToTable("CenterTutors");
                });

            modelBuilder.Entity("Db.Storage.Models.Client", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("IsnCenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("IsnCenter");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Db.Storage.Models.Tutor", b =>
                {
                    b.Property<Guid>("IsnNode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IsnCenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IsnNode");

                    b.HasIndex("IsnCenter");

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("Db.Storage.Models.TutorClient", b =>
                {
                    b.Property<Guid>("IsnTutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IsnClient")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IsnTutor", "IsnClient");

                    b.HasIndex("IsnClient");

                    b.HasIndex("IsnTutor", "IsnClient");

                    b.ToTable("TutorClients");
                });

            modelBuilder.Entity("Db.Storage.Models.CenterTutor", b =>
                {
                    b.HasOne("Db.Storage.Models.Center", "Center")
                        .WithMany("CenterTutors")
                        .HasForeignKey("CenterIsnNode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db.Storage.Models.Tutor", "Tutor")
                        .WithMany("TutorCenters")
                        .HasForeignKey("IsnTutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Db.Storage.Models.Client", b =>
                {
                    b.HasOne("Db.Storage.Models.Center", "Center")
                        .WithMany("Clients")
                        .HasForeignKey("IsnCenter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("Db.Storage.Models.TutorClient", b =>
                {
                    b.HasOne("Db.Storage.Models.Client", "Client")
                        .WithMany("ClientTutors")
                        .HasForeignKey("IsnClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db.Storage.Models.Tutor", "Tutor")
                        .WithMany("TutorClients")
                        .HasForeignKey("IsnTutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Db.Storage.Models.Center", b =>
                {
                    b.Navigation("CenterTutors");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Db.Storage.Models.Client", b =>
                {
                    b.Navigation("ClientTutors");
                });

            modelBuilder.Entity("Db.Storage.Models.Tutor", b =>
                {
                    b.Navigation("TutorCenters");

                    b.Navigation("TutorClients");
                });
#pragma warning restore 612, 618
        }
    }
}
